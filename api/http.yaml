openapi: 3.0.3
info:
  title: BankingApp API
  description: REST API specification for BankingApp (users, banking, cards)
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /api/v1/user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request payload
  /api/v1/user/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: Authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '401':
          description: Invalid credentials
  /api/v1/accounts:
    get:
      summary: Get user's bank accounts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
  /api/v1/accounts/{accountId}/transactions:
    get:
      summary: Get account transaction history
      security:
        - bearerAuth: []
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
  /api/v1/cards:
    get:
      summary: List cards for the user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
  /api/v1/cards/{cardId}/activate:
    post:
      summary: Activate a card
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Card activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '404':
          description: Card not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserRegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
      required: [username, password, email]
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required: [username, password]
    UserResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
    AuthTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: Bearer
    Account:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          example: checking
        balance:
          type: number
          format: float
        currency:
          type: string
          example: USD
    Transaction:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        currency:
          type: string
        description:
          type: string
    Card:
      type: object
      properties:
        id:
          type: string
        holder_name:
          type: string
        number:
          type: string
        expiration:
          type: string
        status:
          type: string
          enum: [active, inactive, blocked]

tags:
  - name: users
    description: User registration and authentication
  - name: banking
    description: Banking operations, accounts, transactions
  - name: cards
    description: Card management